Walidacja vs Weryfikacja;Weryfikacja czy model działa zgodnie z założeniami. Walidacja czy model odwzorowuje rzeczywistość.;1
Modele tłumu;Definicja: Symulacje zachowań grup ludzi. Mikro każda osoba to agent. Makro - tłum to masa/płyn. Przykład: Mikro lepszy do paniki, makro do ruchu na stadionie.  ), ale nie pokazuje paniki - nieodzwierciedlona rzeczywistość (walidacja );1
Techniki walidacji;Porównanie z danymi empirycznymi. Opinia eksperta. Testy statystyczne. Przykład: Model ewakuacji pokazuje 30 sek, test realny - 5 minut błędna walidacja.;1
Podejście bottom-up + wady/zalety;Definicja: Model budowany od poziomu agentów (lokalne reguły globalne efekty). ✔Realizm, emergencja ☑ Trudna kalibracja, koszt obliczeń. Przykład: Model miasta pokazuje samoczynne korki (super), ale działa wolno i wymaga wielu danych.;1
Automat odwracalny;Definicja: Stan systemu można odtworzyć wstecz. ✔Zgodność z fizyką (np. zasada zachowania energii) ☑ Nie oddaje zjawisk losowych. Przykład: Model zderzeń cząstek, ale nie nadaje się do dymu (dyfuzja X).;1
Klasyfikacja AK - który najlepszy;Definicja: Klasy Wolframa (I-IV): I-stabilne II- okresowe III - chaotyczne IV- złożone, z emergencją najczęściej używana w systemach złożonych.  Przykład: Game of Life (klasa IV) = bogata dynamika.;1
Klasyfikacje automatów komórkowych;Wolfram klasy I-IV. Deterministyczne/stochastyczne. Homogeniczne / heterogeniczne. Synchroniczne / asynchroniczne. 1D/2D/3D. Przykład: Model epidemii może być stochastyczny i asynchroniczny - bardziej realistyczny.;1
Odwracalne automaty komórkowe + konkretne przykłady modelu;Definicja: Automaty z jednoznacznym odwrotem czasowym.  Przykłady: HPP- siatka kwadratowa FHP - siatka sześciokątna, lepsze kolizje.  Przykład: HPP daje nierealistyczne trajektorie - kolizje jak krzyż.;1
Techniki walidacji i weryfikacji;Weryfikacja: testy jednostkowe, poprawność kodu. Walidacja: porównanie z rzeczywistością, dane, ocena ekspercka. Przykład: Kod symulacji działa, ale wyniki są nierealne - tylko weryfikacja.;1
Euler vs Lagrange;Euler: śledzi miejsce (co dzieje się w punkcie przestrzeni). Lagrange: śledzi jednostkę (np. człowieka). Przykład: Ruch tłumu - Euler przepływ ludzi, Lagrange każdy człowiek z osobna.;1
AK a superpozycja;Definicja: Superpozycja = sumowanie efektów. AK są nieliniowe - brak superpozycji.  Przykład: W fizyce fale się dodają, w AK nie da się „dodać" zachowań agentów.;1
Ewolucja metody w AK;Definicja: Zmiana reguł automatu w czasie symulacji (np. w odpowiedzi na dane).  Przykład: Reguły zakażeń się zmieniają po szczepieniach.;1
Homogeniczne / synchroniczne AK;Homogeniczne: te same reguły dla wszystkich komórek. Synchroniczne: wszystkie zmieniają się jednocześnie. Częściej używane: synchroniczne + homogeniczne - łatwe do analizy. Przykład: Asynchroniczny model - trudny do przewidzenia, chaos.;1
Mikro vs Makro symulacja tłumów;Mikro: indywidualni agenci, zróżnicowane zachowania. Makro: przepływ masy, uproszczenia. Przykład: Mikro lepsze do paniki, makro do lotniska.;1
HPP/FHP / Boltzmann - różnice;HPP-kwadratowa siatka, proste, brak dyfuzji. FHP - sześciokątna siatka, bardziej realistyczna. Lattice Boltzmann - bardziej zaawansowany, ciągłe płyny. Przykład: FHP lepiej odwzorowuje kolizje gazów niż HPP.;1
Define: cellular automata, 4 classes;Cellular Automata (AK): siatka komórek, które zmieniają stan wg lokalnych reguł.  4 klasy Wolframa: I-stały, II- cykliczny, III - chaotyczny, IV - złożony (emergencja);1
Calibration, verification, validation;Kalibracja: dostrajanie parametrów modelu. Weryfikacja: czy model działa poprawnie. Walidacja: czy model odwzorowuje rzeczywistość.;1
Descriptive vs Rule-based modeling;Descriptive: opisuje rzeczywistość, bez symulacji (np. diagramy). Rule-based: używa reguł, symuluje zachowanie (np. AK, ABM). Przykład: Descriptive - mapa ewakuacji, Rule-based - symulacja ludzi uciekających.;1
Concept of agent in modeling;Definicja: Agent to autonomiczna jednostka decyzyjna w symulacji, mająca cele, percepcję i zachowania.  Przykład: Pies w modelu parku - unika ludzi, szuka właściciela.;1
The paradigm of an agent;Definicja: Agent = jednostka z własną percepcją i działaniem.  Model oparty na interakcjach wielu takich jednostek.  Przykład: Model miasta - każdy samochód to agent z decyzjami.;1
Synchronous, homogenous CA i inne rodzaje;Synchronous: wszystkie komórki zmieniają się naraz. Homogenous: ta sama reguła wszędzie. Inne: Asynchronous - zmiany losowo. Heterogeneous - różne reguły.;1
Steps of modeling a complex system;1. Zdefiniuj problem. 2. Określ agentów / reguły. 3. Kalibracja. 4. Weryfikacja. 5. Walidacja. 6. Analiza wyników.;1
Define descriptive modeling + jakie inne?;Definicja: Tworzenie statycznych opisów systemu - np. schematy, opisy słowne.  Inne: Rule-based. Agent-based. Data-driven.;1
Classification of CA & most useful for agent systems;Klasyfikacje: Wolfram, deterministyczne/stochastyczne, 1D/2D/3D, synchroniczne itd. Najlepsze do agentów: Klasa IV - emergencja, złożoność;1
Good model & continuous agent model;Dobry model: realistyczny, prosty, weryfikowalny, skalowalny. Model ciągły agenta: agent porusza się płynnie. Precyzyjne zachowanie. Koszt obliczeniowy.;1
Calibration vs Verification vs Validation;Kalibracja: strojenie parametrów. Weryfikacja: poprawność kodu. Walidacja: zgodność z rzeczywistością.;1
Concept of agent in intelligent systems;Definicja: Agent = autonomiczna jednostka potrafiąca reagować na środowisko i dążyć do celu.  Przykład: Dron patrolujący teren i reagujący na zagrożenia.;1
Methods for validation and verification;Weryfikacja: testy jednostkowe, debugowanie. Walidacja: dane empiryczne, eksperci, porównania statystyczne.;1
Classifications of CA;Wolfram. Synchroniczne/asynchroniczne. Deterministyczne/stochastyczne. 1D/2D/3D. Homogeniczne/heterogeniczne.;1
Model;Zestaw równań matematycznych opisujących system fizyczny i ich obliczeniowe wyrażenie. Służy do przewidywania lub porównywania przyszłych wyników.;2
Symulacja;Wynik użycia modelu do badania ruchu lub zdarzenia biofizycznego. Dwa typy: Kinematyczna (ruch bez sił) , Dynamiczna (Forward: przewiduje ruch na podstawie sił. Inverse: przewiduje siły na podstawie ruchu ).;2
Weryfikacja;Proces potwierdzający, że model obliczeniowy dokładnie reprezentuje model matematyczny i jego rozwiązanie. Obejmuje znajdowanie i naprawianie błędów modelowania. zapewnia poprawność modelu i zgodność ze specyfikacjami.;2
Walidacja;Proces określający, w jakim stopniu model jest dokładnym odzwierciedleniem świata rzeczywistego dla zamierzonych zastosowań. Polega na przeglądzie i ocenie działania modelu, zapewniając wystarczającą dokładność reprezentacji rzeczywistego systemu.;2
Ważne uwagi dotyczące walidacji i weryfikacji;Żaden model nie jest w 100% zweryfikowany ani zwalidowany. Celem jest wystarczający poziom zaufania. Nie jest to proces jednorazowy, lecz ciągłe działanie. W dużej mierze kwestia oceny.;2
Kalibracja;Proces doboru parametrów modelu i symulacji w celu uzyskania najlepszego dopasowania do danych eksperymentalnych lub referencyjnych. Musi być wykonana przed weryfikacją i walidacją. Dane kalibracyjne nie mogą być używane do walidacji.;2
Metryki wydajności;Błąd: różnica między zmierzoną/oszacowaną wartością a prawdziwą.  Dokładność: zgodność zmierzonych/oszacowanych wartości z prawdziwymi.  Niepewność: potencjalne źródło błędu (luka w wiedzy, zmienność).  Czułość: wpływ zmiany zmiennej na wyniki symulacji.  Wiarygodność: stopień zaufania do modelu/symulacji dla danego pytania badawczego. Cel weryfikacji i walidacji. Najwyższa, gdy wyniki są niewrażliwe na zmienne z dużą niepewnością.;2
Przegląd procesu weryfikacji i walidacji;Cykl: definiowanie pytania badawczego , prototypowanie metod , weryfikacja kodu , generowanie symulacji , walidacja wyników , generowanie przewidywań , testowanie solidności , dokumentacja i udostępnianie. Proces często iteracyjny.;2
Etapy procesu weryfikacji i walidacji;1. Sformułuj pytanie badawcze. 2. Prototypuj metody i stwórz plan W&W. 3. Zweryfikuj oprogramowanie (upewnij się, że model jest poprawnie zaimplementowany, najlepiej używając istniejących modułów). 4. Zwaliduj wyniki (porównaj z niezależnymi danymi, po kalibracji). 5. Przetestuj solidność (oceń wrażliwość wyników na parametry i wybory modelowania, np. poprzez analizę wrażliwości: podejście bezpośrednie , badanie parametryczne , analiza Monte Carlo ). 6. Udokumentuj i udostępnij model/symulację. 7. Wygeneruj przewidywania i hipotezy do testowania w świecie rzeczywistym. Proces wymaga iteracji.;2
Techniki badania modelu;Wskaźniki wydajności (główne i pomocnicze) dla przeglądu. Weryfikacja i walidacja komponentów. Techniki: Testowanie obciążeniowe , Wskaźniki błędów , Sprawdzanie warunków wewnętrznych , Rozbudowane serie testów , Wykrywanie blokad (w modelach pojazdów/agentów) , Analiza osi czasu (bieżące statystyki) , Analiza przepływu podsystemów , Inteligentne użycie animacji , Kompleksowe badanie wyników (główne, lokalne, dla typów obiektów) .;2
Wyzwania weryfikacji i walidacji;1. Tworzenie złotych zestawów danych i problemów referencyjnych (kompleksowe dane eksperymentalne, benchmarki, dokumentacja). 2. Udostępnianie modeli, danych i narzędzi symulacyjnych. 3. Rozwój narzędzi automatyzujących W&W.;2
Kategorie błędów modelowania;1. Błędy zarządzania projektem.  2. Błędy danych i modelowania danych (błędy wejściowe, np. pomiaru, wprowadzania, niekompletność, nieaktualność - błędy reprezentacji danych, np. błędne założenia, transformacje, niekompletność reprezentacji ). 3. Błędy logiki modelowania (błędy w specyfikacji lub implementacji, np. błędne założenia o systemie, implementacji, niekompletna specyfikacja ). 4. Błędy eksperymentalne (błędy podczas fazy eksperymentowania i analizy, np. pomiaru, wprowadzania, niekompletność, nieaktualność, zbyt mało uruchomień ).;2
Typy zachowania agenta - Agent reaktywny;Jego akcje wynikają z eventów dziejących się wokół niego;3
Typy zachowania agenta - Agent deliberate; Kieruje się: Beliefs, desires oraz intentions;3
Typy zachowania agenta - Agent hybrid;Łączy zachowanie agenta reactive oraz deliberate;3